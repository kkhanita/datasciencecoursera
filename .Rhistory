system(org.R-project.R force.LANG en_US.UTF-8)
system(defaults)
airquality <- read.table("hw1_data.csv")
dir
airquality <- read.table("hw1_data.csv")
airquality <- read.table("hw1_data.csv")
ls
dir
setwd("~/Google Drive/DataScience")
install.packages("swirl")
packageVersion("swirl")
library(swirl)
swirl()
5+7
x<-5+7
x
y<-x-3
y
z<-c(1.1, 9, 3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
getwd()
ls()
x<-9
ls()
list.files()
?list.files
args(list.files)
old.dir<-getwd()
dir.create(testdir)
dir.create(testdir , path="old.dir")
dir.create("testdir")
setwd(testdir)
getwd()
dir testdir
setwd(dir = testdir)
cd testdir
?setwd()
setwd()
list.dirs()
dir()
testdir
setwd("testdir")
file.create("test.R")
file.create("mytest.R")
list.files()
file.exists()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R", "mytest2.R")
file.remove("test.R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
file.path('folder1', 'folder2')
?dir.create
dir.create(file.path('testdir2', 'testdir3'))
dir.create(file.path('testdir2', 'testdir3'), recursive=TRUE)
unlink("testdir2/")
unlink("testdir2", recursive=TRUE)
setwd(old.dir)
unlink("testdir", recursive = TRUE)
5+7
x<-5+7
x
y<-x-3
y
c(1.1, 9, 3.14)
z <- c(1.1, 9, 3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1, 2, 3, 4) + c(0, 10, 100)
z*2+1000
my_div
5+7
x<-5+7
x
y<-x-3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt<-sqrt(z-1)
my_sqrt
my_sqrt<-sqrt(z-1)
my_div<-z/my_sqrt
my_div
c(1, 2, 3, 4) + c(0, 10, 100)
c(1,2,3,4)+c(0,10)
c(1, 2, 3, 4) + c(0, 10, 100)
z*2+1000
my_div
1:20
pi:10
15:1
?':'
seq(1,20)
seq(1:20, by=0.5)
seq(1,10, by=0.5)
seq(1,10, by=0.5)
info()
info(:)
info(':')
?':'
seq(0, 10, by=0.5)
my_seg<-seq(5, 10, length=30)
my_seg<-c(seg(5, 10, length(30)))
my_seq <- seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect[num_vect < 1]
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
paste(my_char, collapse = ":")
my_name <- c(my_char, "Khanita")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!",sep = " ")
paste(c(1:3), c("x", "y", "z"), sep = " ")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
x <- c(44, NA, 5, NA)
x*3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
c(x("3","5","7"))
?c
args(c)
info(c)
c(3, 5, 7)
x[c(3, 5, 7)]
x[c(0)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- c(1:20)
my_vector <- 1:20
my_vector
dim(my_vector)
lenght(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix()
?"matrix"
?matrix
my_matrix2 <- matrix(1:20, nrow = 4, ncol = 5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix2)
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(cnames)
colnames(my_data)
colnames(my_data) <- cnames
my_data
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <=10
5 != 7
5 == 7
!5==7
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE).
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints>7)
any(ints < 0)
all(ints>0)
Sys.Date()
mean(c(2,4,5))
submit()
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4, 5, 10))
submit()
submit()
submit()
submit()
submit()
submit()
remainder(5)
remainder(11, 5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submit
submit()
evaluate(c(1.4, 3.6, 7.9, 8.8))
submit()
submit()
info(function)
info()
submit()
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1]}, c(8, 4, 0))
evaluate(function(x){x[3]}, c(8, 4, 0))
evaluate(function(x){x[length(x)]}, c(8, 4, 0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram("My name is Khanita")
submit()
submit()
mad_libs("Thailand", "Beautiful", "R")
submit()
"I" %p% "love" %p% "R!"
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
str(unclass(d1))
weekdays.Date(d1)
weekdays(d1)
months(t1)
quarters(t2)
t3: "October 17, 1986 08:24"
t3 <- "October 17, 1986 08:24"
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
cube(3)
cube(3)
cube(3)
submit()
cube(3)
cube <- function(x, n) {
x^3
}
cube <- function(x, n) {x^3}
cube(3)
getwd()
ls
ls()
list.files()
test.R
}
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
getwd()
dir
ls
dir()
cd spectada
cd specdata\
cd specdata/
dir(specdata)
?dir
?cd
?ls
read.csv("specdata/...")
read.csv("specdata/001.csv")
?args
directory <- read.csv("specdata/",id,".csv")
id <- args[["id"]]
id <- args["id"]
ls()
subnit()
submit()
id
id
ls()
getwd()
list.files()
Assign1.R
open(Assign1.R)
data_all
submit(Assign1.R)
submit()
data_all
source('~/Google Drive/DataScience/Assign1.R')
View(pollutantmean)
pollutantmean(1)
submit()
directory
pollutant
submit()
directory
View(pollutantmean)
directory
pollutant
directory <- c("specdata/")
pollutant <- c("sulphate", "nitrate")
directory
id = 1:332
directory <- c("specdata",paste(id),".csv")
directory
directory <- c("specdata/*.csv")
directory
directory <- c("specdata/id.csv")
directory
#Assignment 1
my_data <- read.csv(paste(id,".csv", sep = ""))
my_data <- read.csv(paste("specdata/", id,".csv", sep = ""))
}
my_data
View(my_data)
`001` <- read.csv("~/Google Drive/DataScience/specdata/001.csv")
View(`001`)
ds <- (dat[, pollutant], na.rm = TRUE)
}
}
pollutantmean("specdata", "Nitrate", 1:10)
mean(dat[, pollutant], na.rm = TRUE)
View(myfunction)
files_full <- list.files(directory, full.names = TRUE)
pollutantmean("specdata", "sulfate", 1:10)
dat <- data.frame()
submit()
getwd()
ls()
dat
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 1:10)
list.files("specdata/")
pollutantmean("specdata/", "sulfate", 1:10)
pollutantmean("specdata/", "sulfate", 1:10)
source('~/Google Drive/DataScience/Assign1.R')
pollutantmean("specdata/", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 34)
pollutantmean("specdata", "nitrate")
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
source('~/Google Drive/DataScience/Assign1.R')
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
cc <- complete("specdata", 54)
print(cc$nobs)
set.seed(42)
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
print(cc[use, "nobs"])
source('~/Google Drive/DataScience/Assign1.R')
source('~/Google Drive/DataScience/Assign1.R')
cr <- corr("specdata")
cr <- sort(cr)
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
cr <- corr("specdata", 129)
cr <- sort(cr)
n <- length(cr)
set.seed(197)
out <- c(n, round(cr[sample(n, 5)], 4))
print(out)
cr <- corr("specdata", 2000)
n <- length(cr)
cr <- corr("specdata", 1000)
cr <- sort(cr)
print(c(n, round(cr, 4)))
swirl()
swirl(resume.class)
install_from_swirl("R_Programming")
library(datasets)
data("iris")
Sepal.Length(virginica)
Sepal.Length('virginica')
?Sepal
?virginica
virginica
Sepal.Length
dni3 <- dimnames(iris3)
ii <- data.frame(matrix(aperm(iris3, c(1,3,2)), ncol = 4,
dimnames = list(NULL, sub(" L.",".Length",
sub(" W.",".Width", dni3[[2]])))),
Species = gl(3, 50, labels = sub("S", "s", sub("V", "v", dni3[[3]]))))
all.equal(ii, iris) # TRUE
head(iris)
mean(iris$Sepal.Length[iris$Species=="virginica"])
colMeans(iris)
apply(iris, 1, mean)
apply(iris[, 1:4],1,mean)
apply(iris,2,mean)
apply(iris[, 1:4],2,mean)
data("mtcars")
?mtcars
head(mtcars)
mean(mtcars@mpg, mtcars$cyl)
sapply(mtcars, cyl, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
with(mtcars, tapply(mpg,cyl,mean))
lapply(mtcars,mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
head(mtcars)
sapply(split(mtcars$hp, mtcars$cyl), mean)
209.21-82.64
debug(ls)
ls
}
source('~/Google Drive/DataScience/Assign2.R')
m
clear()
stop debug
source('~/Google Drive/DataScience/Assign2.R')
